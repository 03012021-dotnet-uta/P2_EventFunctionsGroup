# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - main


pool: Default
  #vmImage: 'windows-latest'

variables:
  solution: '*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


#this installs the newest SDK for this build
steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    packageType: 'sdk'
    version: '5.0.x'
    # performMultiLevelLookup: true
    # includePreviewVersions: false # Required 'true' to use preview versions

- task: UseDotNet@2
  displayName: 'Install .NET Core Runtime'
  inputs:
    packageType: 'runtime'
    version: '2.x'
    # performMultiLevelLookup: true

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'LocalDirectory'
    jdkFile: 'C://Users/Home/Downloads/jdk-11.0.10_windows-x64_bin.zip'
    jdkDestinationDirectory: '/builds/binaries/externals'
    cleanDestinationDirectory: true

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'nicholasvvong0056'
    scannerMode: 'MSBuild'
    projectKey: 'nicholasvvong0056_EventFunctions_P2'
    projectName: 'EventFunctions_P2'
    extraProperties: sonar.exclusions=**/AngularTest/**

#this will restore and build the directory.
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'EventFunctionsP2'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '*.sln'
    arguments: '--configuration $(buildConfiguration) --collect "Code Coverage"'
    testRunTitle: 'Dotnet tests running'
    workingDirectory: 'Testing'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coburtura/coverage.xml'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publishing'
  inputs:
    command: 'publish'
    publishWebProjects: true
    modifyOutputPath: false
    workingDirectory: 'WebApi'
    projects: '$(solution)'
    zipAfterPublish: true

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1 (508e33e7-82f6-4bdd-8693-aac68277e78d)'
    appType: 'webApp'
    WebAppName: 'EventFunctionsP2'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'


