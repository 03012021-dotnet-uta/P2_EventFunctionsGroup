# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
    - main

pool: Default
  # vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  ngBuildConfiguration: '--prod'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'LocalDirectory'
    jdkFile: 'C:/Users/Home/Downloads/jdk-11.0.10_windows-x64_bin.zip'
    jdkDestinationDirectory: '/builds/binaries/externals'
    cleanDestinationDirectory: true

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'eventfunctionsangular'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'eventfunctionsangular_EventFunctions_P2_Angular'
    cliProjectName: 'eventfunctionsangular_EventFunctions_P2_Angular'
    cliSources: '$(System.DefaultWorkingDirectory)/AngularTest'
    extraProperties: |
      sonar.flex.cobertura.reportPaths=$(System.DefaultWorkingDirectory)/AngularTest/coverage/cobertura-coverage.xml
      sonar.javascript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/AngularTest/coverage/lcov.info

- script: |
    cd "$(System.DefaultWorkingDirectory)/AngularTest"
    npm install -g @angular/cli
    npm install --save-dev @angular-devkit/build-angular
    npm install
    ng build --prod --verbose
  displayName: 'npm install and build'

# - task: Npm@1
#   inputs:
#     command: 'custom'
#     workingDir: '$(System.DefaultWorkingDirectory)/AngularTest'
#     customCommand: 'install -g @angular/cli'

# - task: Npm@1
#   inputs:
#     command: 'custom'
#     workingDir: '$(System.DefaultWorkingDirectory)/AngularTest'
#     customCommand: 'install --save-dev @angular-devkit/build-angular'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '$(System.DefaultWorkingDirectory)/AngularTest'
    verbose: true

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)/AngularTest'
    customCommand: 'install puppeteer --save-dev'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)/AngularTest'
    customCommand: 'run build -- $(ngBuildConfiguration)'
    verbose: true

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)/AngularTest'
    customCommand: 'run test -- --watch=false --code-coverage --karma-config=karma.conf.ci.js'
    # customCommand: 'run test -- --watch=false --source-map=false --browsers=ChromeHeadless --code-coverage'
  continueOnError: true

- task: PublishCodeCoverageResults@1
  condition: succeededOrFailed()
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: './AngularTest/coverage/cobertura-coverage.xml'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/AngularTest/dist/'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1 (508e33e7-82f6-4bdd-8693-aac68277e78d)'
    appType: 'webApp'
    WebAppName: 'eventsfunctions'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'

